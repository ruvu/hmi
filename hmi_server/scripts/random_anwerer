#!/usr/bin/env python

import rospy
from hmi_msgs.msg import HumanInteractionAction, HumanInteractionResult, Result
from actionlib import SimpleActionServer
from random import choice as choose

class HMIServer(object):

    def __init__(self, name):
        self._action_name = name
        self.server = SimpleActionServer(name, HumanInteractionAction,
                                         execute_cb=self.execute_cb, auto_start=False)
        self.server.start()
        rospy.loginfo('%s started', name)

    def execute_cb(self, goal):
        self.server.set_succeeded(
            self.determine_answer(question=goal.question,
                                  spec=goal.spec,
                                  choices=goal.choices))

    def determine_answer(self, question, spec, choices):
        rospy.loginfo('I got a question: %s', question)
        rospy.loginfo('This is the spec: %s', spec)

        results = []
        for choice in choices:
            rospy.loginfo('Choice: \n%s', repr(choice))
            if len(choice.values):
                value = choose(choice.values)
                results.append(Result(id=choice.id, value=value))
            else:
                rospy.logwarn('No values for choice "%s" in spec "%s"', choice.id, spec)

        return HumanInteractionResult(results=results)

if __name__ == '__main__':
    rospy.init_node('random_anwerer')
    HMIServer(rospy.get_name())
    rospy.spin()
