#!/usr/bin/env python

import rospy
from std_msgs.msg import String
from hmi_server.abstract_server import AbstractHMIServer, HMIResult


class StringTopicServer(AbstractHMIServer):

    def _string_callback(self, msg):
        self._string = msg.data

    def _determine_answer(self, description, spec, choices, is_preempt_requested):
        self._string = None

        string_sub = rospy.Subscriber("string", String, self._string_callback, queue_size=1)
        rospy.loginfo("StringTopicServer: subscribed to %s", string_sub.name)

        while not rospy.is_shutdown() and not is_preempt_requested():
            rospy.sleep(.1)
            if self._string:
                rospy.loginfo("StringTopicServer: Received string: '%s'", self._string)
                break

        result = HMIResult(raw_result=self._string)
        self._string = None

        return result


if __name__ == '__main__':
    rospy.init_node('string_topic_server')
    StringTopicServer(rospy.get_name())
    rospy.spin()
